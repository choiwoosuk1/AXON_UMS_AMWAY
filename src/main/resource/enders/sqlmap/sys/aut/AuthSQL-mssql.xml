<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.enders.ums.sys.aut.dao.AuthMapper">
	<!-- ************ 사용자 권한 관리  ******************-->
	<!-- 사용자 권한 목록 조회 -->
	<select id="getUserAuthList" parameterType="menuUserMappVO" resultType="menuUserMappVO">
		SELECT *
		  FROM (
				SELECT M.USER_ID 
					 , M.USER_NM
					 , M.DEPT_NM
					 , M.STATUS
					 , M.ORG_NM
					 , M.POSITION_GB
					 , M.JOB_GB
					 , M.REG_ID
					 , M.REG_DT
					 , M.MENU_COUNT
					 , (SELECT CD_NM FROM NEO_CD WHERE UILANG = M.UILANG AND CD_GRP = 'C010' AND CD = M.STATUS) STATUS_NM
					 , (SELECT CD_NM FROM NEO_CD WHERE UILANG = M.UILANG AND CD_GRP = 'C106' AND CD = M.POSITION_GB) POSITION_NM
					 , (SELECT CD_NM FROM NEO_CD WHERE UILANG = M.UILANG AND CD_GRP = 'C105' AND CD = M.JOB_GB) JOB_NM
					 , (SELECT USER_NM FROM NEO_USER WHERE M.REG_ID = USER_ID ) REG_NM
					 , ROW_NUMBER() OVER (ORDER BY M.USER_ID) SEQ
					 , COUNT(1) OVER() TOTAL_COUNT
				  FROM (
				  		SELECT A.USER_ID
							  , A.DEPT_NO
							  , A.USER_NM
							  , B.DEPT_NM
							  , A.STATUS
							  , A.UILANG
							  , D.POSITION_GB
							  , D.JOB_GB
							  , D.ORG_NM
							  , C.REG_ID
							  , C.REG_DT
							  , ISNULL(C.MENU_COUNT, 0 ) MENU_COUNT
						  FROM NEO_USER A 
						 INNER JOIN NEO_DEPT B ON (A.DEPT_NO = B.DEPT_NO) 
						 INNER JOIN (SELECT X.USER_ID , Y.ORG_CD, Y.ORG_KOR_NM ORG_NM , X.POSITION_GB, X.JOB_GB
									   FROM NEO_USERORG_MAPP X, V_NEO_ORGANIZATION  Y
									  WHERE X.ORG_CD= Y.ORG_CD AND Y.USE_YN ='Y') D ON (A.USER_ID = D.USER_ID)
						  LEFT OUTER JOIN (SELECT USER_ID, COUNT(*) MENU_COUNT, MAX(REG_ID) REG_ID, MAX(REG_DT) REG_DT 
											 FROM NEO_MENUUSER_MAPP 
										    WHERE MENU_ID NOT LIKE 'M99%' AND ISNULL(MENU_ID, '' ) != '' GROUP BY USER_ID ) C ON (A.USER_ID = C.USER_ID) 
						 WHERE A.USE_YN = 'Y'
						   <if test="searchUserId != null and searchUserId != ''">
						   AND A.USER_ID LIKE '%' + #{searchUserId} + '%'
						   </if>
						   <if test="searchStatus != null and searchStatus != ''">
						   AND A.STATUS = #{searchStatus}
						   </if>
						   <if test="searchUserNm != null and searchUserNm != ''">
						   AND A.USER_NM LIKE '%' + #{searchUserNm} + '%'
						   </if>
						   <if test="searchDeptNo != 0">
						   AND A.DEPT_NO = #{searchDeptNo}
						   </if> 
					   ) M
			   ) SRC 
		 WHERE SEQ BETWEEN (#{page}-1)*#{rows}+1 AND #{page}*#{rows}
	</select>
	
	<!-- 사용자 권한 정보 조회 -->
	<select id="getUserAuthInfo" parameterType="menuUserMappVO" resultType="menuUserMappVO">
		SELECT MENU_ID 
			 , LV1_NM
			 , LV2_NM
			 , LV3_NM
		  FROM (
				SELECT X.MENU_ID, Y.MENU_NM LV3_NM, Y.PARENTMENU_ID
					 , (SELECT MENU_NM  FROM NEO_SYSMENU WHERE MENU_ID = Y.PARENTMENU_ID ) LV2_NM
					 , (SELECT SERVICE_NM  FROM NEO_SERVICEKEY WHERE SERVICE_GB = CAST(SUBSTRING(X.MENU_ID , 2,2) AS INT)) LV1_NM
				  FROM NEO_MENUUSER_MAPP X
					 , NEO_SYSMENU Y
				 WHERE X.MENU_ID= Y.MENU_ID
				   AND X.MENU_ID NOT LIKE 'M99%'
				   AND X.USER_ID = #{userId}
			   ) M
		 ORDER BY MENU_ID
	</select>
	
	<select id="getUserAuthChildCount" parameterType="menuUserMappVO" resultType="menuUserMappVO">
		SELECT PARENTMENU_ID MENU_ID
			 , CHILD_CNT
		  FROM (
				SELECT SUBSTRING( PARENTMENU_ID, 1, 3) PARENTMENU_ID
				      , COUNT(*) CHILD_CNT
				  FROM (
						SELECT Y.PARENTMENU_ID
							 , COUNT(*) CHILD_CNT
						  FROM NEO_MENUUSER_MAPP X, NEO_SYSMENU Y
						 WHERE X.MENU_ID = Y.MENU_ID
						   AND X.USER_ID = #{userId}
						 GROUP BY Y.PARENTMENU_ID) TT
				 GROUP BY SUBSTRING(PARENTMENU_ID, 1, 3)
				 UNION ALL
				SELECT Y.PARENTMENU_ID
					  , COUNT(*) CHILD_CNT
				  FROM NEO_MENUUSER_MAPP X, NEO_SYSMENU Y
				 WHERE X.MENU_ID = Y.MENU_ID
				   AND X.USER_ID = #{userId}
				 GROUP BY Y.PARENTMENU_ID
			   ) M
		ORDER BY PARENTMENU_ID
	</select>
	
	<!-- 사용자 권한 등록 -->
	<insert id="insertUserAuth" parameterType="menuUserMappVO">
		INSERT INTO NEO_MENUUSER_MAPP
		(
			  MENU_ID
			, USER_ID
			, REG_ID
			, REG_DT
		)
		VALUES
		(
			  #{menuId}
			, #{userId}
			, #{regId}
			, #{regDt}
		)
	</insert>
 
	<!-- 사용자 권한 정보 삭제 -->
	<delete id="deleteUserAuth" parameterType="menuUserMappVO">
		DELETE FROM NEO_MENUUSER_MAPP
		 WHERE USER_ID = #{userId}
		   AND MENU_ID NOT LIKE 'M99%'
	</delete>
	
	<!-- 사용자 권한 정보 삭제 -->
	<delete id="deleteMenuUserAuth" parameterType="menuUserMappVO">
		DELETE FROM NEO_MENUUSER_MAPP
		 WHERE USER_ID = #{userId}
		   AND MENU_ID IN
			<foreach collection="arrMenuIds" item="item" index="index" open="(" close=")" separator=",">
			  #{item}
			</foreach>
	</delete>
		 
	<!-- 메뉴 목록 조회 (사용자에게 등록가능한 전체메뉴) -->
	<select id="getUserMenuInfo" parameterType="menuUserMappVO" resultType="menuUserMappVO">
		SELECT X.MENU_ID
			 , X.MENU_NM
			 , 0 MENULVL_VAL
			 , '00' PARENTMENU_ID
			 , '' LV2_NM
			 , '' LV1_NM
			 , 'N' FUNCTION_YN 
			 , (SELECT COUNT(*) FROM NEO_SYSMENU WHERE MENULVL_VAL = 1 AND SUBSTRING(MENU_ID, 1, 3) = X.MENU_ID ) CHILD_CNT
		  FROM (
		  		SELECT 'M' + CAST(SERVICE_GB AS VARCHAR) MENU_ID
		  			 , SERVICE_NM MENU_NM 
				  FROM NEO_USER_PROG M, NEO_SERVICEKEY N
				 WHERE M.PROG_ID = N.SERVICE_GB
				   AND M.USER_ID = #{userId}
				 UNION ALL
				SELECT 'M99' MENU_ID
		  			 , '공통설정' MENU_NM 
			   ) X 
		 UNION ALL
		SELECT X.MENU_ID
			 , X.MENU_NM
			 , X.MENULVL_VAL
			 , SUBSTRING(X.MENU_ID, 1, 3) PARENTMENU_ID
			 , '' LV2_NM
			 , '' LV1_NM
			 , FUNCTION_YN
			 , (SELECT COUNT(*) FROM NEO_SYSMENU WHERE PARENTMENU_ID = X.MENU_ID ) CHILD_CNT
		  FROM NEO_SYSMENU X
			 , (SELECT 'M' + CAST(SERVICE_GB AS VARCHAR) MENU_ID
					  , SERVICE_NM MENU_NM
				  FROM NEO_USER_PROG X, NEO_SERVICEKEY Y
				 WHERE X.PROG_ID = Y.SERVICE_GB
				   AND X.USER_ID = #{userId}
				 UNION ALL
				SELECT 'M99' MENU_ID
					 , '공통설정' MENU_NM
			   ) Y
		 WHERE SUBSTRING(X.MENU_ID, 1, 3) = Y.MENU_ID
		   AND X.MENULVL_VAL = 1
		   AND X.USE_YN='Y'
		 UNION ALL
		SELECT X.MENU_ID
			 , X.MENU_NM
			 , X.MENULVL_VAL
			 , X.PARENTMENU_ID
			 , (SELECT MENU_NM  FROM NEO_SYSMENU WHERE MENU_ID = X.PARENTMENU_ID ) LV2_NM
			 , (SELECT SERVICE_NM  FROM NEO_SERVICEKEY WHERE SERVICE_GB = CAST( SUBSTRING(X.MENU_ID , 2,2) AS INT )) LV1_NM 
			 , FUNCTION_YN
			 , (SELECT COUNT(*) FROM NEO_SYSMENU WHERE PARENTMENU_ID = X.MENU_ID ) CHILD_CNT
		  FROM NEO_SYSMENU X
		  	 , (SELECT 'M' + CAST(SERVICE_GB AS VARCHAR) MENU_ID
					  , SERVICE_NM MENU_NM 
				  FROM NEO_USER_PROG X, NEO_SERVICEKEY Y
				 WHERE X.PROG_ID = Y.SERVICE_GB
				   AND X.USER_ID = #{userId}
				 UNION ALL
				SELECT 'M99' MENU_ID
		  			 , '공통설정' MENU_NM
			   ) Y
		 WHERE SUBSTRING(X.MENU_ID, 1, 3) = Y.MENU_ID
		   AND X.MENULVL_VAL = 2
		   AND X.USE_YN='Y'
		 ORDER BY MENULVL_VAL, MENU_ID
	</select>
	
	<!-- 사용자 메뉴 목록 조회 - (현재 사용자에게 권한이있는 메뉴)-->
	<select id="getUserAccessMenuInfo" parameterType="menuUserMappVO" resultType="menuUserMappVO">
		SELECT X.MENU_ID
			 , X.MENU_NM
			 , 0 MENULVL_VAL
			 , '00' PARENTMENU_ID
			 , 'N' FUNCTION_YN
			 , (SELECT COUNT(*) FROM NEO_SYSMENU WHERE MENULVL_VAL = 1 AND SUBSTRING(MENU_ID, 1, 3) = X.MENU_ID ) CHILD_CNT
		  FROM (SELECT 'M' + CAST(SERVICE_GB AS VARCHAR) MENU_ID
		  			 , SERVICE_NM MENU_NM 
				  FROM NEO_USER_PROG M, NEO_SERVICEKEY N
				 WHERE M.PROG_ID = N.SERVICE_GB 
				   AND M.USER_ID = #{userId}
			   ) X 
		 UNION ALL
		SELECT X.MENU_ID
			 , X.MENU_NM
			 , X.MENULVL_VAL
			 , SUBSTRING(X.MENU_ID, 0, 3) PARENTMENU_ID
			 , FUNCTION_YN
			 , (SELECT COUNT(*) FROM NEO_MENUUSER_MAPP WHERE USER_ID = #{userId} AND MENU_ID = X.MENU_ID ) CHILD_CNT
		  FROM NEO_SYSMENU X
			 , (SELECT 'M' + CAST(SERVICE_GB AS VARCHAR) MENU_ID
					  , SERVICE_NM MENU_NM 
				  FROM NEO_USER_PROG X, NEO_SERVICEKEY Y
				 WHERE X.PROG_ID = Y.SERVICE_GB AND X.USER_ID = #{userId}
			   ) Y 
		 WHERE SUBSTRING(X.MENU_ID, 1, 3) = Y.MENU_ID
		   AND X.MENULVL_VAL = 1
		   AND X.USE_YN='Y'
		 UNION ALL
		SELECT X.MENU_ID
			 , X.MENU_NM
			 , X.MENULVL_VAL
			 , X.PARENTMENU_ID
			 , FUNCTION_YN
			 , (SELECT COUNT(*) FROM NEO_SYSMENU WHERE PARENTMENU_ID = X.MENU_ID ) CHILD_CNT
		  FROM NEO_SYSMENU X
		  	 , (SELECT 'M' + CAST(SERVICE_GB AS VARCHAR) MENU_ID
					  , SERVICE_NM MENU_NM 
				  FROM NEO_USER_PROG X, NEO_SERVICEKEY Y 
				 WHERE X.PROG_ID = Y.SERVICE_GB AND X.USER_ID = #{userId}
			   ) Y , NEO_MENUUSER_MAPP Z 
		 WHERE SUBSTRING(X.MENU_ID, 1, 3) = Y.MENU_ID
		   AND X.MENU_ID = Z.MENU_ID 
		   AND X.MENULVL_VAL = 2
		   AND X.USE_YN='Y'
		   AND Z.USER_ID =  #{userId}
		 ORDER BY MENULVL_VAL, MENU_ID 
	</select>
	
	<!-- ************ 메뉴 권한 관리  ******************-->
	<select id="getMenuUserList" parameterType="menuUserMappVO" resultType="menuUserMappVO">
		SELECT A.MENU_ID
			 , A.USER_ID 
			 , B.USER_NM 
			 , C.ORG_CD
			 , C.ORG_NM
			 , (SELECT CD_NM FROM NEO_CD WHERE UILANG = #{uilang} AND CD_GRP = 'C105' AND CD = C.JOB_GB) JOB_NM
			 , 'E' ADD_TYPE
		 FROM NEO_MENUUSER_MAPP A,
			  NEO_USER B, 
			 (SELECT X.USER_ID , Y.ORG_CD, Y.ORG_KOR_NM ORG_NM  , X.POSITION_GB, X.JOB_GB
			    FROM NEO_USERORG_MAPP X, V_NEO_ORGANIZATION  Y
			   WHERE X.ORG_CD= Y.ORG_CD AND Y.USE_YN ='Y' 
			 ) C
		 WHERE A.USER_ID = B.USER_ID
		   AND A.USER_ID = C.USER_ID
		   AND A.MENU_ID NOT LIKE 'M99%'
		   <if test="menuIds != null and menuIds != ''">
		   AND A.MENU_ID IN  
		   <foreach collection="arrMenuIds" item="item" index="index" open="(" close=")" separator=",">
		   #{item}
		   </foreach>
		   </if>
		 GROUP BY A.MENU_ID, A.USER_ID, B.USER_NM, C.ORG_CD, C.ORG_NM, C.JOB_GB
		 ORDER BY A.MENU_ID, C.ORG_CD, B.USER_NM
	</select>
 
	<select id="getMenuUserSimple" parameterType="menuUserMappVO" resultType="menuUserMappVO">
		SELECT A.USER_ID 
			 , B.USER_NM 
			 , C.ORG_CD
			 , C.ORG_NM
			 , (SELECT CD_NM FROM NEO_CD WHERE UILANG = #{uilang} AND CD_GRP = 'C105' AND CD = C.JOB_GB) JOB_NM
			 , 'E' ADD_TYPE
		 FROM NEO_MENUUSER_MAPP A,
			  NEO_USER B, 
			 (SELECT X.USER_ID , Y.ORG_CD, Y.ORG_KOR_NM ORG_NM, X.POSITION_GB, X.JOB_GB
			    FROM NEO_USERORG_MAPP X, V_NEO_ORGANIZATION  Y
			   WHERE X.ORG_CD= Y.ORG_CD AND Y.USE_YN ='Y' 
			 ) C
		 WHERE A.USER_ID = B.USER_ID
		   AND A.USER_ID = C.USER_ID
		   AND A.MENU_ID NOT LIKE 'M99%'
		   <if test="menuIds != null and menuIds != ''">
		   AND A.MENU_ID IN  
		   <foreach collection="arrMenuIds" item="item" index="index" open="(" close=")" separator=",">
		   #{item}
		   </foreach>
		   </if>
		 GROUP BY A.USER_ID, B.USER_NM, C.ORG_CD, C.ORG_NM, C.JOB_GB
		 ORDER BY C.ORG_CD, B.USER_NM
	</select>
	
	<!-- 메뉴 목록 조회 (공통설정 제외) -->
	<select id="getMenuList" parameterType="menuUserMappVO" resultType="menuUserMappVO">
		SELECT X.MENU_ID
			 , X.MENU_NM
			 , 0 MENULVL_VAL
			 , '00' PARENTMENU_ID
			 , '' LV2_NM
			 , '' LV1_NM
			 , 'N' FUNCTION_YN 
			 , (SELECT COUNT(*) FROM NEO_SYSMENU WHERE MENULVL_VAL = 1 AND SUBSTRING(MENU_ID, 1, 3) = X.MENU_ID) CHILD_CNT
		  FROM (SELECT 'M' + CAST(SERVICE_GB AS VARCHAR) MENU_ID
		  			 , SERVICE_NM MENU_NM 
				  FROM NEO_SERVICEKEY
				 WHERE USE_YN ='Y'
			   ) X 
		 UNION ALL
		SELECT X.MENU_ID
			 , X.MENU_NM
			 , X.MENULVL_VAL
			 , SUBSTRING(X.MENU_ID, 1, 3) PARENTMENU_ID
			 , '' LV2_NM
			 , '' LV1_NM 
			 , FUNCTION_YN
			 , (SELECT COUNT(*) FROM NEO_SYSMENU WHERE PARENTMENU_ID = X.MENU_ID) CHILD_CNT
		  FROM NEO_SYSMENU X
		  	 , (SELECT 'M' + CAST(SERVICE_GB AS VARCHAR) MENU_ID
		  			 , SERVICE_NM MENU_NM 
				  FROM NEO_SERVICEKEY
				 WHERE USE_YN ='Y'
			   ) Y 
		 WHERE SUBSTRING(X.MENU_ID, 1, 3) = Y.MENU_ID
		   AND X.MENULVL_VAL = 1
		   AND X.USE_YN='Y'
		 UNION ALL
		SELECT X.MENU_ID
			 , X.MENU_NM
			 , X.MENULVL_VAL
			 , X.PARENTMENU_ID
			 , (SELECT MENU_NM  FROM NEO_SYSMENU WHERE MENU_ID = X.PARENTMENU_ID ) LV2_NM
			 , (SELECT SERVICE_NM  FROM NEO_SERVICEKEY WHERE SERVICE_GB = CAST(SUBSTRING(X.MENU_ID, 2, 2) AS INT)) LV1_NM
			 , FUNCTION_YN
			 , (SELECT COUNT(*) FROM NEO_SYSMENU WHERE PARENTMENU_ID = X.MENU_ID ) CHILD_CNT
		  FROM NEO_SYSMENU X
		  	 , (SELECT 'M' + CAST(SERVICE_GB AS VARCHAR) MENU_ID
		  			 , SERVICE_NM MENU_NM 
				  FROM NEO_SERVICEKEY
				 WHERE USE_YN ='Y'
			   ) Y 
		 WHERE SUBSTRING(X.MENU_ID, 1, 3) = Y.MENU_ID
		   AND X.MENULVL_VAL = 2
		   AND X.USE_YN='Y'
		 ORDER BY MENULVL_VAL, MENU_ID 
	</select>
	
	<!-- 권한 매핑 사용자 조회 --> 
	<select id="getFuncPermAuthList" parameterType="funcPermVO" resultType="funcPermVO">
		SELECT A.FUNC_CD
		     , A.USER_ID
		     , B.USER_NM
		     , C.ORG_CD
		     , C.ORG_NM
			 , (SELECT CD_NM FROM NEO_CD WHERE UILANG = #{uilang} AND CD_GRP = 'C105' AND CD = C.JOB_GB) JOB_NM
			 , 'E' ADD_TYPE
		FROM NEO_FUNC_PERM A
		   , NEO_USER B 
		   , (SELECT X.USER_ID, Y.ORG_CD, Y.ORG_KOR_NM ORG_NM, X.POSITION_GB, X.JOB_GB
			    FROM NEO_USERORG_MAPP X, V_NEO_ORGANIZATION Y 
			   WHERE X.ORG_CD= Y.ORG_CD AND Y.USE_YN ='Y' 
			 ) C
		WHERE A.USER_ID = B.USER_ID 
		  AND A.USER_ID = C.USER_ID 
		  AND A.FUNC_CD= #{funcCd}
		ORDER BY C.ORG_CD, B.USER_NM
	</select>
	
	<!-- 권한 매핑 사용권한 정보 삭제 -->
	<delete id="deleteFuncPermAuthInfo" parameterType="string">
		DELETE FROM NEO_FUNC_PERM
		 WHERE FUNC_CD = #{funcCd}
	</delete>
	
	<!-- 권한 매핑 사용권한 정보 등록 -->
	<insert id="insertFuncPermAuthInfo" parameterType="funcPermVO">
		INSERT INTO NEO_FUNC_PERM
		(
			FUNC_CD
		  , USER_ID
		)
		VALUES
		(
			#{funcCd}
		  , #{userId}
		)
	</insert>
	
	<!-- 사용자 그룹 조회 -->
	<select id="getFuncGrpPermAuthList" parameterType="funcGrpPermVO" resultType="funcGrpPermVO">
		SELECT A.FUNC_CD
		     , A.DEPT_NO
		     , B.DEPT_NM
		     , 'E' ADD_TYPE
		  FROM NEO_FUNC_GRPPERM A
		     , NEO_DEPT B
		WHERE A.DEPT_NO = B.DEPT_NO
		  AND B.STATUS ='000'
		  AND A.FUNC_CD = #{funcCd}
		  AND B.USE_YN ='Y'
		ORDER BY A.DEPT_NO, B.DEPT_NM
	</select>
	
	<!-- 사용자 그룹 권한 정보 삭제 -->
	<delete id="deleteFuncGrpPermAuthInfo" parameterType="string">
		DELETE FROM NEO_FUNC_GRPPERM
		 WHERE FUNC_CD = #{funcCd}
	</delete>
	
	<!-- 사용자 그룹 권한 정보 등록 -->
	<insert id="insertFuncGrpPermAuthInfo" parameterType="funcGrpPermVO">
		INSERT INTO NEO_FUNC_GRPPERM
		(
			FUNC_CD
		  , DEPT_NO
		)
		VALUES
		(
			#{funcCd}
		  , #{deptNo}
		)
	</insert>
	
	<!-- 조직도 직책으로 사용자 조회 -->
	<select id="getFuncUserList" parameterType="funcUserVO" resultType="funcUserVO">
		SELECT A.USER_ID
			 , A.DEPT_NO
			 , A.USER_NM
			 , A.STATUS
			 , D.ORG_CD
			 , D.ORG_KOR_NM
			 , I.CD_NM POSITION_NM
			 , H.CD_NM JOB_NM
		  FROM NEO_USER A
			 , (SELECT X.USER_ID, X.ORG_CD, Y.ORG_KOR_NM, X.POSITION_GB, X.JOB_GB
				  FROM NEO_USERORG_MAPP X, V_NEO_ORGANIZATION Y
				 WHERE X.ORG_CD = Y.ORG_CD
				   <if test="orgCd != null and orgCd != ''">
				   AND X.ORG_CD  = #{orgCd} 
				   </if>
			   ) D
			 , (SELECT CD, CD_NM FROM NEO_CD WHERE CD_GRP = 'C105' AND USE_YN = 'Y' AND UILANG = #{uilang}) H
			 , (SELECT CD, CD_NM FROM NEO_CD WHERE CD_GRP = 'C106' AND USE_YN = 'Y' AND UILANG = #{uilang}) I
		 WHERE A.USER_ID = D.USER_ID
		   AND D.POSITION_GB = I.CD
		   AND D.JOB_GB = H.CD
		   AND A.USE_YN ='Y'
		   AND A.STATUS = '000'
		   <if test="funcCd != null">
		   AND A.USER_ID NOT IN (SELECT USER_ID FROM NEO_FUNC_PERM WHERE FUNC_CD = #{funcCd} )
		   </if>
		   <if test="userId != null and userId != ''">
		   AND A.USER_ID LIKE '%' + #{userId} + '%'
		   </if>
		   <if test="userNm != null and userNm != ''">
		   AND A.USER_NM LIKE '%' + #{userNm} + '%'
		   </if>
		  ORDER BY A.USER_NM
	</select>
	
	<!--그룹 사용자  조회-->
	<select id="getFuncGrpUserList" parameterType="funcGrpUserVO" resultType="funcGrpUserVO">
		SELECT A.DEPT_NO
			 , A.DEPT_NM
		  FROM NEO_DEPT A 
		 WHERE A.USE_YN ='Y'
		   AND A.STATUS = '000'
		   <if test="funcCd != null">
		   AND A.DEPT_NO NOT IN (SELECT DEPT_NO FROM NEO_FUNC_GRPPERM WHERE FUNC_CD = #{funcCd})
		   </if> 
		   <if test="deptNm != null and deptNm != ''">
		   AND A.DEPT_NM LIKE '%' + #{deptNm} + '%'
		   </if>
		 ORDER BY A.DEPT_NM
	</select>
	
</mapper>